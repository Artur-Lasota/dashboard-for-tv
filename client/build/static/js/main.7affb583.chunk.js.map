{"version":3,"sources":["components/Aqi.js","components/Weather.js","components/News.js","components/Gas.js","components/Currency.js","components/Bitcoin.js","components/Bus6Chart.js","components/Bus13Chart.js","components/Bus18Chart.js","components/Bus.js","App.js","serviceWorker.js","index.js"],"names":["Aqi","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","aqi","color","series","_this2","fetch","then","response","json","data","setState","aqivalue","aqiTimer","_this3","setInterval","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","stop","react_default","createElement","className","Component","Weather","forecast","loaded","weatherTimer","icon","changeIcon","temperature","highTemp","lowTemp","parseInt","rainProb","components_Aqi","News","news","newsTimer","map","n","i","key","title","Gas","gas","gasPodlaskie","gasTimer","diffSymb","diff","_this4","g","diePrice","Icon","changeColor","diePriceDiff","style","fontSize","changeToIcon","e95Price","e95PriceDiff","s98Price","s98PriceDiff","lpgPrice","lpgPriceDiff","Currency","currency","rates","currencyTimer","flag","alt","react_world_flags_default","basePath","name","format","pngSize","code","height","EUR","USD","GBP","CHF","Bitcoin","higherthan2","bitcoin","options","chart","animations","enabled","easing","dynamicAnimation","speed","toolbar","show","zoom","stroke","curve","colors","yaxis","text","fontFamily","labels","xaxis","checkBitcoinLength","bind","assertThisInitialized","push","bitcoinString","getBitcoin","arrBTC","arrBTCSliced","undefined","length","BTC","slice","Math","max","console","log","react_apexcharts_min_default","type","width","components_Currency","components_Gas","Bus6Chart","x","percents","minutes","colorFill","bus_to_chart6","busToChartTimer","bus","percent","minute","plotOptions","radialBar","startAngle","endAngle","track","background","strokeWidth","shadow","top","left","opacity","blur","dataLabels","offsetY","value","formatter","val","Bus13Chart","bus_to_chart13","Bus18Chart","bus_to_chart18","Bus","components_Bus6Chart","components_Bus13Chart","components_Bus18Chart","App","rel","href","components_Weather","components_Bitcoin","components_Bus","components_News","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7affb583.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport '../App.css';\n\nclass Aqi extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      \n      aqi: '',\n      color: '',\n      series: [0]\n    };\n  }\n\n    componentDidMount() {\n        fetch('/api/aqi')\n            .then(response => response.json())\n            .then(data => \n            this.setState({ aqi: data.aqi.aqivalue, color: data.aqi.color}));\n            this.aqiTimer();\n        }\n\n    aqiTimer(){\n      setInterval( async() => {\n          fetch('/api/aqi')\n          .then(response => response.json())\n          .then(data => this.setState({aqi: data.aqi.aqivalue, color: data.aqi.color}));\n      }, 1000*60*60*3)\n    }\n\n    \n\n  render() {\n    return (\n    <div >\n      <div className=\"aqi__text-relative\">\n        <div className=\"icon-aqi\">\n          <i className={'wi wi-smog wi-color--'+this.state.color}></i>\n        </div>\n        <div className=\"aqi__text-position\">AQI: {this.state.aqi}</div>\n      </div>\n      </div>\n      \n    );\n  }\n}\n\nexport default Aqi;","import React, { Component } from 'react';\nimport '../App.css';\nimport Aqi from './Aqi';\n\nclass Weather extends Component {\n\n    state= {\n        forecast: [],\n        loaded: false\n    }\n\n    componentDidMount() {\n        fetch('api/weather')\n            .then(response => response.json())\n            .then(data => this.setState({ forecast: data.forecast, loaded: true }));\n            this.weatherTimer();\n        }\n\n    weatherTimer(){\n      setInterval( async() => {\n        fetch('api/weather')\n        .then(response => response.json())\n        .then(data => this.setState({ forecast: data.forecast, loaded: true }));\n      }, 1000*60*30)\n    }\n\n    changeIcon(icon){\n      if(icon === 'partly-cloudy-day' || icon === 'partly-cloudy-night'){\n        return 'cloudy'\n      } else if(icon === ' wind'){\n        return 'windy'\n      } else if(icon === 'clear-day' || icon === 'clear-night'){\n        return 'sunny'\n      }\n       return icon\n    }\n\n  render() {\n    return (\n      <div>\n      {\n        this.state.loaded ? (\n          <div className=\"box bus-box--height\">\n            <div className=\"current-weather\">\n              <div className=\"icon-weather\">\n                <i className={'wi wi-day-'+this.changeIcon(this.state.forecast.icon)}></i>\n              </div>\n\n\n              <div className=\"temperature__current\">\n                {this.state.forecast.temperature}°C\n              </div>\n            </div>\n\n\n            <div className=\"temperature__details\">\n              <div className=\"temperature__high\">\n                <i className='wi wi-thermometer'></i> {this.state.forecast.highTemp}°C\n              </div>\n              <div className=\"temperature__low\">\n                <i className='wi wi-thermometer'></i> {this.state.forecast.lowTemp}°C\n              </div>\n              <div className=\"temperature__rain\">\n                <i className='wi wi-raindrop'></i> {parseInt(this.state.forecast.rainProb)}%\n              </div>\n            </div>\n\n            <div>\n            <Aqi/>\n            </div>\n\n            \n            <div className=\"clearfix\" />\n\n            \n          </div>\n          ) : ('nothing')\n      }\n      </div>\n    );\n  }\n}\n\nexport default Weather;","import React, { Component } from 'react';\nimport '../App.css';\n\nclass News extends Component {\n\n    state= {\n        loaded: false,\n        news: []\n    }\n\n    componentDidMount() {\n        fetch('/api/news')\n            .then(response => response.json())\n            .then(data => this.setState({ news: data.news, loaded: true }));\n        this.newsTimer();\n        }\n\n        newsTimer(){\n            setInterval( async() => {\n                fetch('/api/news')\n                .then(response => response.json())\n                .then(data => this.setState({ news: data.news, loaded: true }));\n            }, 1000*60*30)\n        }\n  render() {\n      return (\n        <div className=\"box box__text\">\n        {\n            this.state.loaded ? (\n            <div>\n        {\n            <div className=\"ticker-wrap\">\n                <div className=\"ticker\">\n              {this.state.news.map((n, i) => \n              \n                    <div key={i} className=\"ticker__item\">\n                        <div>\n                            <div>\n                                {n.title} \n                            </div>\n                        </div>\n                    </div>\n              )}\n              </div>\n        </div>\n        }\n            </div>\n            ) : ('nothing')\n        }\n        </div>\n        );\n    }\n}\n\nexport default News;","import React, { Component } from 'react';\nimport '../App.css';\nimport Icon from '@material-ui/core/Icon';\n\nclass Gas extends Component {\n\n    state= {\n        loaded: false,\n        gas: [],\n        gasPodlaskie: []\n    }\n\n     componentDidMount() {\n        fetch('/api/gas')\n            .then(response => response.json())\n            .then(data => this.setState({ gas: data.gas, loaded: true }));\n            this.gasTimer();\n            \n        }\n\n        gasTimer(){\n            setInterval( async() => {\n                fetch('/api/news')\n                .then(response => response.json())\n                .then(data => this.setState({ news: data.news, loaded: true }));\n            }, 1000*60*60*24)\n        }\n\n        //  gasPodlaskieFilter(){\n        //     this.state.gas.map((g) => \n        //    {\n        //        if(g.title === \"Podlaskie\"){\n        //            this.setState((g) => ({\n        //                gasPodlaskie: g\n        //            }))\n        //        }\n\n        //     })\n        // }\n\n        changeToIcon(diffSymb){\n            if(diffSymb === '+')\n                {\n                    return 'keyboard_arrow_up'\n                }\n            else return 'keyboard_arrow_down'\n        }\n\n        changeColor(diff){\n            if(diff === '+')\n            {\n                return 'incerease'\n            } else\n            return 'decreases'\n        }\n\n  render() {\n      return (\n        <div className=\"box\">\n        {\n            this.state.loaded ? (\n            <div>\n        {\n            this.state.gas.map((g, i) => \n            <div className=\"box__text fuel-prices__main-box\" key={i}>\n                <div  className=\"fuel-prices--display-inline first-block-element-gas\">\n                    <div className=\"fuel-prices__text\" >\n                        DIE: {g.diePrice}\n                    </div>\n                    <div className=\"fuel-prices__text-diff \">\n                        <Icon className={\"icon_large--\"+this.changeColor(g.diePriceDiff)} style={{ fontSize: 42 }}>\n                            {this.changeToIcon(g.diePriceDiff)}\n                        </Icon>\n                    </div>\n                </div>\n                <div className=\"fuel-prices--display-inline \">\n                    <div className=\"fuel-prices__text\">\n                    E95: {g.e95Price}\n                    </div>\n                    <div className=\"fuel-prices__text-diff\">\n                        <Icon className={\"icon_large--\"+this.changeColor(g.e95PriceDiff)} style={{ fontSize: 42 }}>\n                            {this.changeToIcon(g.e95PriceDiff)}\n                        </Icon>\n                    </div>\n                </div>\n                <div className=\"fuel-prices--display-inline\">\n                    <div className=\"fuel-prices__text\">\n                     S98: {g.s98Price}\n                    </div>\n                    <div className=\"fuel-prices__text-diff\">\n                        <Icon className={\"icon_large--\"+this.changeColor(g.s98PriceDiff)} style={{ fontSize: 42 }}>\n                            {this.changeToIcon(g.s98PriceDiff)}\n                        </Icon>\n                    </div>\n                </div>\n                <div className=\"fuel-prices--display-inline\">\n                    <div className=\"fuel-prices__text\">\n                    LPG: {g.lpgPrice}\n                    </div>\n                    <div className=\"fuel-prices__text-diff\">\n                        <Icon className={\"icon_large--\"+this.changeColor(g.lpgPriceDiff)} style={{ fontSize: 42 }}>\n                            {this.changeToIcon(g.lpgPriceDiff)}\n                        </Icon>\n                    </div>\n                </div>\n            </div>)\n        }\n            </div>\n            ) : ('nothing')\n        }\n        </div>\n        );\n    }\n}\n\nexport default Gas;","import React, { Component } from 'react';\nimport '../App.css';\nimport Flag from 'react-world-flags'\n\nclass Currency extends Component {\n\n    state= {\n        currency: []\n    }\n\n    componentDidMount() {\n        fetch('/api/currency')\n            .then(response => response.json())\n            .then(data => this.setState({ currency: data.currency[0].rates }));\n            this.currencyTimer();\n        }\n\n        currencyTimer(){\n            setInterval( async() => {\n                fetch('/api/currency')\n                .then(response => response.json())\n                .then(data => this.setState({ currency: data.currency[0].rates }));\n            }, 1000*60*30)\n        }\n\n        renderFlag(flag, alt){\n            return(\n                <Flag\n                basePath='img/flags'\n                name={flag}\n                format=\"png\"\n                pngSize={32}\n                alt={alt}\n                />\n            )\n        }\n\n  render() {\n    return (\n         <div className=\"box box__text\">\n            <div className=\"first-block-element\">\n            <Flag code={ 'EU' } height=\"42\"/> <span className=\"flag-position\">{this.state.currency.EUR} PLN</span>\n            </div>\n            <div>\n            <Flag code={ 'usa' } height=\"32\"/> <span className=\"flag-position\">{this.state.currency.USD} PLN</span>\n            </div> \n            <div>\n            <Flag code={ 'gb' } height=\"32\"/> <span className=\"flag-position\">{this.state.currency.GBP} PLN</span>\n            </div>\n            <div>\n            <Flag  className=\"flag-position--square\" code={ 'ch' } height=\"42\"/> <span className=\"flag-text-position--square\">{this.state.currency.CHF} PLN</span>\n            </div>\n       </div>\n    );\n  }\n}\n\nexport default Currency;","import React, { Component } from 'react';\nimport '../App.css';\nimport Gas from './Gas';\nimport Currency from './Currency';\nimport Chart from \"react-apexcharts\";\n\nclass Bitcoin extends Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        loaded: false,\n        higherthan2: false,\n        bitcoin: [],\n        options: {\n          chart: {\n            animations: {\n                enabled: true,\n                easing: 'linear',\n                dynamicAnimation: {\n                    speed: 1000\n                }\n            },\n            toolbar: {\n                show: false\n            },\n            zoom: {\n                enabled: false\n            }\n        },\n        stroke: {\n            curve: 'smooth'\n        },\n          colors: [\"#ffb84d\"],\n          yaxis: {\n              title: {\n                  text: '',\n                  style: {\n                    color: '#fff',\n                    fontSize: '20px',\n                    fontFamily: 'Helvetica, Arial, sans-serif',\n                }\n              },\n              labels: {\n                show: true,\n                style: {\n                    color: '#d3d3d3',\n                    fontFamily: 'Helvetica, Arial, sans-serif',\n                }\n              }\n          },\n          xaxis: {\n              labels: {\n                  style: {\n                      colors: '#d3d3d3',\n                  }\n              }\n          }\n        },\n        series: []\n      };\n      // This binding is necessary to make `this` work in the callback\n      this.checkBitcoinLength = this.checkBitcoinLength.bind(this);\n\n    }\n\n    componentDidMount() {\n          fetch('/api/bitcoin')\n            .then(response => response.json())\n            .then(data => this.setState(state => {\n               state.bitcoin.push(data.bitcoin[0].rates)}\n               ))\n            .then (data => this.setState({bitcoinString: data}))\n            .then(this.setState({loaded: true}))\n            .then(this.checkBitcoinLength());\n        this.getBitcoin()\n    }\n\n    getBitcoin() {\n        setInterval(async() =>{\n            fetch('/api/bitcoin')\n            .then(response => response.json())\n            .then(data => this.setState(state => {\n              state.bitcoin.push(data.bitcoin[0].rates)}))\n            .then(this.setState({loaded: true}))\n            .then(this.checkBitcoinLength())\n      }\n        , 1000*60);\n    }\n\n    checkBitcoinLength(){\n      var arrBTC = [];\n      var arrBTCSliced = [];\n      if(this.state.bitcoin[0] !== undefined)\n        {\n          if(this.state.bitcoin.length>1){\n            this.setState({higherthan2: true})\n          for(var i = 0; i< this.state.bitcoin.length; i++){\n            arrBTC.push(this.state.bitcoin[i].BTC)\n          }\n          arrBTCSliced = arrBTC.slice(Math.max(arrBTC.length - 10, 0))\n          console.log(arrBTC.slice(Math.max(arrBTC.length - 10, 0)))\n          this.setState({\n            series: [\n              { \n                name: 'BTC',\n                data: arrBTCSliced\n              }\n            ]\n        }) \n        } else return 'Cena bitcoin: ' + this.state.bitcoin[0].BTC + ' USD'\n      } else return 'nothing'\n    }\n\n\n  render() {\n    return (\n      <div className=\"box\">\n      {\n          this.state.loaded ? (\n          <div>\n      \n          <div className=\"bitcoin box__text floating-left\">\n            {this.state.higherthan2 ? (\n              <div>\n                <Chart\n                  options={this.state.options}\n                  series= {this.state.series}\n                  type=\"line\"\n                  width=\"950\"\n                  height=\"250\"\n                />\n              </div>\n            ) : (\n            <div>\n              {this.checkBitcoinLength()}\n            </div>)\n          }\n          \n          \n          </div>\n          <div className=\"currency floating-left\">\n              <Currency />\n          </div>\n          <div className=\"gas floating-left\">\n              <Gas />\n          </div>\n          <div className=\"clearfix\" />\n      \n          </div>\n          ) : ('nothing')\n      }\n      </div>\n      );\n  }\n\n\n}\n\nexport default Bitcoin;","import React, { Component } from 'react';\nimport '../App.css';\nimport Chart from \"react-apexcharts\";\n\nclass Bus6Chart extends Component {\n\n    constructor(props) {\n        super(props);\n    \n        this.state = {\n          \n          x : [],\n          percents: [],\n          minutes: [],\n          series: [0]\n        };\n\n        this.colorFill = this.colorFill.bind(this);\n      }\n\n      componentDidMount() {\n        fetch('/api/bus_to_chart6')\n            .then(response => response.json())\n            .then((data) => {\n              if(data !== undefined && data.bus_to_chart6 !== undefined) {\n                this.setState({ \n                  percents: data.bus_to_chart6[0]\n                })\n              }\n            });\n            this.busToChartTimer()\n        }\n\n        busToChartTimer(){\n          setInterval( async() => {\n            fetch('/api/bus_to_chart6')\n            .then(response => response.json())\n            .then(data => {\n              if(data !== undefined && data.bus_to_chart6 !== undefined) {\n                this.setState({\n                  percents: data.bus_to_chart6[0]\n                })\n              }\n            })\n          }, 1000*60)\n        }\n\n        \n\n      colorFill(bus){\n        var percent = parseInt(bus.percent)\n        var minute = parseInt(bus.minute)\n        if(minute !== undefined)\n        {\n          if(minute<10){\n            return <Chart\n                  options={\n                    {\n                      colors: ['#C72230'],\n                      labels: ['6'],\n                      plotOptions: {\n                        radialBar: {\n                          startAngle: -90,\n                          endAngle: 90,\n                          track: {\n                              background: \"#e7e7e7\",\n                              strokeWidth: '97%',\n                              shadow: {\n                                  enabled: true,\n                                  top: 2,\n                                  left: 0,\n                                  color: '#999',\n                                  opacity: 1,\n                                  blur: 2\n                              }\n                          },\n                          dataLabels: {\n                            name: {\n                              fontSize: '76px', //size of label example our bus number\n                              color: \"#fff\",\n                              offsetY: -40\n                              },\n                            value: {\n                              fontSize: '22px',  // size of label example our time to bus departure\n                              color: '#fff',\n                              offsetY: -26,\n                              formatter: function (val) {\n                                if(val !== 0)\n                                {\n                                  var min = 60 * (val * 0.01)\n                                  return '00:0' + (parseInt(min))\n                                } else \n                                  return '00:00'\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                  series={[percent]}\n                  labels={this.state.labels}\n                  type=\"radialBar\"\n                  width={600}\n                />\n            }\n          else if (minute >=10 && minute<15){\n            return <Chart\n            options={\n              {\n                colors: ['#E8DB6B'],\n                labels: ['6'],\n                plotOptions: {\n                  radialBar: {\n                    startAngle: -90,\n                    endAngle: 90,\n                    track: {\n                        background: \"#e7e7e7\",\n                        strokeWidth: '97%',\n                        shadow: {\n                            enabled: true,\n                            top: 2,\n                            left: 0,\n                            color: '#999',\n                            opacity: 1,\n                            blur: 2\n                        }\n                    },\n                    dataLabels: {\n                      name: {\n                        fontSize: '76px', //size of label example our bus number\n                        color: \"#fff\",\n                        offsetY: -40\n                        },\n                      value: {\n                        fontSize: '22px',  // size of label example our time to bus departure\n                        color: '#fff',\n                        offsetY: -26,\n                        formatter: function (val) {\n                          var min = 60 * (val * 0.01)\n                          return '00:' + (parseInt(min))\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n            series={[percent]}\n            labels={this.state.labels}\n            type=\"radialBar\"\n            width={600}\n          />\n          } else {\n            return <Chart\n            options={\n              {\n                colors: ['#92D001'],\n                labels: ['6'],\n                plotOptions: {\n                  radialBar: {\n                    startAngle: -90,\n                    endAngle: 90,\n                    track: {\n                        background: \"#e7e7e7\",\n                        strokeWidth: '97%',\n                        shadow: {\n                            enabled: true,\n                            top: 2,\n                            left: 0,\n                            color: '#999',\n                            opacity: 1,\n                            blur: 2\n                        }\n                    },\n                    dataLabels: {\n                      name: {\n                        fontSize: '76px', //size of label example our bus number\n                        color: \"#fff\",\n                        offsetY: -40\n                        },\n                      value: {\n                        fontSize: '22px',  // size of label example our time to bus departure\n                        color: '#fff',\n                        offsetY: -26,\n                        formatter: function (val) {\n                          var min = 60 * (val * 0.01)\n                          return '00:' + (parseInt(min))\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n            series={[percent]}\n            labels={this.state.labels}\n            type=\"radialBar\"\n            width={600}\n          />\n          }\n        }\n      }\n\n    render() {\n        return (\n              <div>\n                 {this.colorFill(this.state.percents)} \n              </div>\n        );\n      }\n}\n\n\n\nexport default Bus6Chart;","import React, { Component } from 'react';\nimport '../App.css';\nimport Chart from \"react-apexcharts\";\n\nclass Bus13Chart extends Component {\n\n    constructor(props) {\n        super(props);\n    \n        this.state = {\n          \n          x : [],\n          percents: [],\n          minutes: [],\n          series: [0]\n        };\n\n        this.colorFill = this.colorFill.bind(this);\n      }\n\n      componentDidMount() {\n        fetch('/api/bus_to_chart13')\n            .then(response => response.json())\n            .then((data) => {\n              console.log(data)\n              if(data !== undefined && data.bus_to_chart13 !== undefined) {\n                this.setState({ \n                  percents: data.bus_to_chart13[0]\n                })\n              }\n            });\n            this.busToChartTimer();\n          }\n  \n          busToChartTimer(){\n              setInterval( async() => {\n                  fetch('/api/bus_to_chart13')\n                  .then(response => response.json())\n                  .then(data => {\n                    if(data !== undefined && data.bus_to_chart6 !== undefined) {\n                      this.setState({\n                        percents: data.bus_to_chart13[0]\n                      })\n                    }\n                  })\n              }, 1000*60)\n            }\n            // options={\n            //   {\n            //     colors: ['#d94f4f'],\n            //     labels: ['6'],\n            //     plotOptions: {\n            //       radialBar: {\n            //         startAngle: -90,\n            //         endAngle: 90,\n            //         track: {\n            //             background: \"#e7e7e7\",\n            //             strokeWidth: '97%',\n            //             shadow: {\n            //                 enabled: true,\n            //                 top: 2,\n            //                 left: 0,\n            //                 color: '#999',\n            //                 opacity: 1,\n            //                 blur: 2\n            //             }\n            //         },\n            //         dataLabels: {\n            //           name: {\n            //             fontSize: '76px', //size of label example our bus number\n            //             color: \"#fff\",\n            //             offsetY: -40\n            //             },\n            //           value: {\n            //             fontSize: '22px',  // size of label example our time to bus departure\n            //             color: '#fff',\n            //             offsetY: -26,\n            //             formatter: function (val) {\n            //               if(val !== 0)\n            //               {\n            //                 var min = 60 * (val * 0.01)\n            //                 return '00:0' + (parseInt(min))\n            //               } else \n            //                 return '00:00'\n            //             }\n            //           }\n            //         }\n            //       }\n            //     }\n            //   }\n            // }\n\n      colorFill(bus){\n        var percent = parseInt(bus.percent)\n        if(bus.minute !== undefined)\n        {\n          if(bus.minute<10){\n            return <Chart\n            \n                  options={\n                    {\n                      colors: ['#C72230'],\n                      labels: ['13'],\n                      plotOptions: {\n                        radialBar: {\n                          startAngle: -90,\n                          endAngle: 90,\n                          track: {\n                              background: \"#e7e7e7\",\n                              strokeWidth: '97%',\n                              shadow: {\n                                  enabled: true,\n                                  top: 2,\n                                  left: 0,\n                                  color: '#999',\n                                  opacity: 1,\n                                  blur: 2\n                              }\n                          },\n                          dataLabels: {\n                            name: {\n                              fontSize: '76px', //size of label example our bus number\n                              color: \"#fff\",\n                              offsetY: -40\n                              },\n                            value: {\n                              fontSize: '22px',  // size of label example our time to bus departure\n                              color: '#fff',\n                              offsetY: -26,\n                              formatter: function (val) {\n                                if(val !== 0)\n                                {\n                                  var min = 60 * (val * 0.01)\n                                  return '00:0' + (parseInt(min))\n                                } else\n                                  return '00:00'\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                  series={[percent]}\n                  labels={this.state.labels}\n                  type=\"radialBar\"\n                  width={600}\n                />\n            }\n          else if (bus.minute >=10 && bus.minute<15){\n            return <Chart\n            options={\n              {\n                colors: ['#E8DB6B'],\n                labels: ['13'],\n                plotOptions: {\n                  radialBar: {\n                    startAngle: -90,\n                    endAngle: 90,\n                    track: {\n                        background: \"#e7e7e7\",\n                        strokeWidth: '97%',\n                        shadow: {\n                            enabled: true,\n                            top: 2,\n                            left: 0,\n                            color: '#999',\n                            opacity: 1,\n                            blur: 2\n                        }\n                    },\n                    dataLabels: {\n                      name: {\n                        fontSize: '76px', //size of label example our bus number\n                        color: \"#fff\",\n                        offsetY: -40\n                        },\n                      value: {\n                        fontSize: '22px',  // size of label example our time to bus departure\n                        color: '#fff',\n                        offsetY: -26,\n                        formatter: function (val) {\n                          var min = 60 * (val * 0.01)\n                          return '00:' + (parseInt(min))\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n            series={[percent]}\n            labels={this.state.labels}\n            type=\"radialBar\"\n            width={600}\n          />\n          } else {\n            return <Chart\n            options={\n              {\n                colors: ['#92D001'],\n                labels: ['13'],\n                plotOptions: {\n                  radialBar: {\n                    startAngle: -90,\n                    endAngle: 90,\n                    track: {\n                        background: \"#e7e7e7\",\n                        strokeWidth: '97%',\n                        shadow: {\n                            enabled: true,\n                            top: 2,\n                            left: 0,\n                            color: '#999',\n                            opacity: 1,\n                            blur: 2\n                        }\n                    },\n                    dataLabels: {\n                      name: {\n                        fontSize: '76px', //size of label example our bus number\n                        color: \"#fff\",\n                        offsetY: -40\n                        },\n                      value: {\n                        fontSize: '22px',  // size of label example our time to bus departure\n                        color: '#fff',\n                        offsetY: -26,\n                        formatter: function (val) {\n                          var min = 60 * (val * 0.01)\n                          return '00:' + (parseInt(min))\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n            series={[percent]}\n            labels={this.state.labels}\n            type=\"radialBar\"\n            width={600}\n          />\n          }\n        }\n      }\n\n    render() {\n        return (\n              <div>\n                {this.colorFill(this.state.percents)}\n              </div>\n        );\n      }\n}\n\n\n\nexport default Bus13Chart;","import React, { Component } from 'react';\nimport '../App.css';\nimport Chart from \"react-apexcharts\";\n\nclass Bus18Chart extends Component {\n\n    constructor(props) {\n        super(props);\n    \n        this.state = {\n          \n          x : [],\n          percents: [],\n          minutes: [],\n          series: [0]\n        };\n\n        this.colorFill = this.colorFill.bind(this);\n      }\n\n      componentDidMount() {\n        fetch('/api/bus_to_chart18')\n            .then(response => response.json())\n            .then((data) => {\n              if(data !== undefined && data.bus_to_chart18 !== undefined) {\n                this.setState({ \n                  percents: data.bus_to_chart6[0]\n                })\n              }\n            });\n            this.busToChartTimer();\n          }\n  \n          busToChartTimer(){\n              setInterval( async() => {\n                  fetch('/api/bus_to_chart18')\n                  .then(response => response.json())\n                  .then(data => {\n                    if(data !== undefined && data.bus_to_chart6 !== undefined) {\n                      this.setState({\n                        percents: data.bus_to_chart18[0]\n                      })\n                    }\n                  })\n              }, 1000*60)\n            }\n  \n\n      colorFill(bus){\n        var percent = parseInt(bus.percent)\n        if(bus.minute !== undefined)\n        {\n          if(bus.minute<10){\n            return <Chart\n                  options={\n                    {\n                      colors: ['#C72230'],\n                      labels: ['18'],\n                      plotOptions: {\n                        radialBar: {\n                          startAngle: -90,\n                          endAngle: 90,\n                          track: {\n                              background: \"#e7e7e7\",\n                              strokeWidth: '97%',\n                              shadow: {\n                                  enabled: true,\n                                  top: 2,\n                                  left: 0,\n                                  color: '#999',\n                                  opacity: 1,\n                                  blur: 2\n                              }\n                          },\n                          dataLabels: {\n                            name: {\n                              fontSize: '76px', //size of label example our bus number\n                              color: \"#fff\",\n                              offsetY: -40\n                              },\n                            value: {\n                              fontSize: '22px',  // size of label example our time to bus departure\n                              color: '#fff',\n                              offsetY: -26,\n                              formatter: function (val) {\n                                if(val !== 0)\n                                {\n                                  var min = 60 * (val * 0.01)\n                                  return '00:0' + (parseInt(min))\n                                }\n                                  else return '00:00'\n                                }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                  series={[percent]}\n                  labels={this.state.labels}\n                  type=\"radialBar\"\n                  width={600}\n                />\n            }\n          else if (bus.minute >=10 && bus.minute<15){\n            return <Chart\n            options={\n              {\n                colors: ['#E8DB6B'],\n                labels: ['18'],\n                plotOptions: {\n                  radialBar: {\n                    startAngle: -90,\n                    endAngle: 90,\n                    track: {\n                        background: \"#e7e7e7\",\n                        strokeWidth: '97%',\n                        shadow: {\n                            enabled: true,\n                            top: 2,\n                            left: 0,\n                            color: '#999',\n                            opacity: 1,\n                            blur: 2\n                        }\n                    },\n                    dataLabels: {\n                      name: {\n                        fontSize: '76px', //size of label example our bus number\n                        color: \"#fff\",\n                        offsetY: -40\n                        },\n                      value: {\n                        fontSize: '22px',  // size of label example our time to bus departure\n                        color: '#fff',\n                        offsetY: -26,\n                        formatter: function (val) {\n                          var min = 60 * (val * 0.01)\n                          return '00:' + (parseInt(min))\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n            series={[percent]}\n            labels={this.state.labels}\n            type=\"radialBar\"\n            width={600}\n          />\n          } else {\n            return <Chart\n            options={\n              {\n                colors: ['#92D001'],\n                labels: ['18'],\n                plotOptions: {\n                  radialBar: {\n                    startAngle: -90,\n                    endAngle: 90,\n                    track: {\n                        background: \"#e7e7e7\",\n                        strokeWidth: '97%',\n                        shadow: {\n                            enabled: true,\n                            top: 2,\n                            left: 0,\n                            color: '#999',\n                            opacity: 1,\n                            blur: 2\n                        }\n                    },\n                    dataLabels: {\n                      name: {\n                        fontSize: '76px', //size of label example our bus number\n                        color: \"#fff\",\n                        offsetY: -40\n                        },\n                      value: {\n                        fontSize: '22px',  // size of label example our time to bus departure\n                        color: '#fff',\n                        offsetY: -26,\n                        formatter: function (val) {\n                          var min = 60 * (val * 0.01)\n                          return '00:' + (parseInt(min))\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n            series={[percent]}\n            labels={this.state.labels}\n            type=\"radialBar\"\n            width={600}\n          />\n          }\n        }\n      }\n\n    render() {\n        return (\n              <div>\n                {this.colorFill(this.state.percents)}\n              </div>\n        );\n      }\n}\n\n\n\nexport default Bus18Chart;","import React, { Component } from 'react';\nimport '../App.css';\nimport Bus6Chart from './Bus6Chart';\nimport Bus13Chart from './Bus13Chart';\nimport Bus18Chart from './Bus18Chart';\n\nclass Bus extends Component {\n  render() {\n    return (\n      <div className=\"bus-box--height\">\n        <div className=\"ApexCharts--margin-30\"></div>\n        <div className=\"ApexCharts__mixed--chart\"><Bus6Chart/></div>\n        <div className=\"ApexCharts__mixed--chart\"><Bus13Chart/></div>\n        <div className=\"ApexCharts__mixed--chart\"><Bus18Chart/></div>\n      </div>\n      );\n  }\n}\n\n\n\n\nexport default Bus;","import React, { Component } from 'react';\nimport Weather from './components/Weather';\nimport News from './components/News';\nimport Bitcoin from './components/Bitcoin';\nimport Bus from './components/Bus';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"main-font\">\n        <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" />\n        \n        <Weather />\n        <Bitcoin />\n        <Bus />\n        <News />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}